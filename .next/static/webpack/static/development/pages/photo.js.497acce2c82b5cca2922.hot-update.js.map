{"version":3,"file":"static/webpack/static/development/pages/photo.js.497acce2c82b5cca2922.hot-update.js","sources":["webpack:///./pages/photo.js"],"sourcesContent":["import Layout from '../components/Layout.js'\nimport React, { Component } from 'react'\nimport Card from '../components/Card.js'\nimport axios from 'axios'\n\nexport default class extends Component {\n    \n    constructor(props) {\n        super(props);\n        this.state = {\n            text: \"\",\n            errorLabel: \"\",\n            errorLabelHidden: true,\n            list: [],\n            data: props.data\n        };\n    }\n    static getInitialProps ({ query: { data ,user } }) {\n        return { data: data , user:user}\n    }\n    onChange = (e) => {\n        // Because we named the inputs to match their corresponding values in state, it's\n        // super easy to update the state\n        this.setState({[e.target.name]: e.target.value});\n    }\n\n\n    onSubmit = (e) => {\n        e.preventDefault();\n        // get our form data out of state\n        const {text} = this.state;\n        axios.post('http://localhost:3000/'+this.props.data._id,{text:text})\n            .then((response) => {\n                var payload = \"Upload Success\";\n                //console.log(`response fetched. ${payload}`);\n                this.setState({\n                    text: \"\",\n                    author: \"\",\n                    errorLabelHidden: true,\n                    list: this.state.list.concat([payload])\n                });\n\n                //add new data to new state\n                let newData =this.state.data ;\n                newData.comments.push(response.data);\n                this.setState({data: newData});\n            })\n            .catch((error) => {\n                var payload = JSON.stringify(error, null, 2);\n                console.log(error);\n                this.setState({\n                    errorLabelHidden: false,\n                    errorLabel: \"OOPS that didn't work :(\",\n                    list: this.state.list.concat([payload])\n                });\n            });\n    }\n\n    render () {\n        //console.log(this.props.data);\n        const {text} = this.state;\n\n        return (\n            <Layout title = 'PhotoLink'  user = {this.props.user}>\n                <div className =\"container\">\n                    <Card photo = {this.props.data} isZoom ={false} />\n                    { this.props.user ? (\n                        <form onSubmit={this.onSubmit}>\n                            <div className=\"form-group\">\n                                <div className = \"form-inline\">\n                                    <label htmlFor=\"add-comment\">Write a comment:</label>\n                                </div>\n                                <textarea className=\"form-control mt-1\" rows=\"2\" name=\"text\" value={text} onChange={this.onChange}></textarea>\n                                <button type=\"submit\" className=\"btn btn-primary btn-sm mt-2\">Submit</button>\n                            </div>\n                        </form>\n                    ):(<span></span>)}\n                    \n                    {\n                        this.state.data.comments.map((e,i) => (\n                            <div key ={i}>\n                                <h3>{e.author.username}</h3>\n                                <h5>{e.text}</h5>\n                            </div>\n                        ))\n                    }\n                </div>\n            </Layout>\n        )\n    }\n}"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;;;;;;AAGA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAcA;AACA;AACA;AACA;AACA;AAlBA;AAqBA;AACA;AAFA;AAIA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AACA;AACA;AAMA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAhDA;AACA;AACA;AACA;AACA;AACA;AALA;AAFA;AASA;AACA;;;AAyCA;AACA;AADA;AAIA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAMA;AACA;AAAA;AADA;AAUA;;;AAxEA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;;;;AAdA;AACA;;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}